name: regression-tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches: [ 'main' ]
    tags-ignore: [ '**' ]

  # Triggers the workflow on pull request events
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  regression_tests:
    name: Python ${{ matrix.python-version }}

    strategy:
      fail-fast: false  # false: try to complete all jobs
      matrix:
        name:
          - linux gnu-13

        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

        include:
          - name: linux gnu-13
            os: ubuntu-24.04
            install-options: --with-omni --with-tests --without-dace
            env: JAVA_HOME=${JAVA_HOME_11_X64}
            pkg-dependencies: graphviz gfortran byacc flex openjdk-11-jdk ant cmake meson ninja-build libhdf5-dev libopenmpi-dev
            pip-dependencies: pyyaml fypp

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone CLOUDSC
        uses: actions/checkout@v4
        with:
          repository: ecmwf-ifs/dwarf-p-cloudsc
          path: cloudsc
          ref: develop

      - name: Clone CLOUDSC2 TL AD
        uses: actions/checkout@v4
        with:
          repository: ecmwf-ifs/dwarf-p-cloudsc2-tl-ad
          path: cloudsc2_tl_ad
          ref: develop

      - name: Clone ECWAM
        uses: actions/checkout@v4
        with:
          repository: ecmwf-ifs/ecwam
          path: ecwam
          ref: develop-1.3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
            sudo apt-get -o Acquire::Retries=3 install -y ${{ matrix.pkg-dependencies }}
            pip install ${{ matrix.pip-dependencies }}

      - name: Set-up Environment
        run:
          echo ${{ matrix.env }} >> $GITHUB_ENV
          echo ${{ matrix.path }} >> $GITHUB_PATH

      - name: Install Loki
        run: |
          ./install ${{ matrix.install-options }}

      - name: Run CLOUDSC and ECWAM regression tests
        env:
          CLOUDSC_DIR: ${{ github.workspace }}/cloudsc
          CLOUDSC2_DIR: ${{ github.workspace }}/cloudsc2_tl_ad
          ECWAM_DIR: ${{ github.workspace }}/ecwam
          OMP_STACKSIZE: 4G
        run: |
          source loki-activate
          pytest --pyargs loki.transformations -k 'cloudsc or ecwam'
