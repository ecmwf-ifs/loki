name: tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push events
  push:
    branches: [ 'main' ]
    tags-ignore: [ '**' ]

  # Triggers the workflow on pull request events
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  pytest:
    name: pytest

    strategy:
      fail-fast: false  # false: try to complete all jobs
      matrix:
        name:
          - linux gnu-13
          # - macos

        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']

        include:
          - name: linux gnu-13
            os: ubuntu-24.04
              # Enable --with-dace as soon as DaCe supports 3.13 and Numpy>2.0
            install-options: --with-omni --with-examples --with-tests --without-dace
            env: JAVA_HOME=${JAVA_HOME_11_X64}
            pkg-dependencies: graphviz gfortran byacc flex openjdk-11-jdk ant cmake meson ninja-build

          # - name: macos
          #   os: macos-14
          #   python-version: '3.13'
          #   install-options: --with-examples --with-tests --without-dace
          #   env: CC=gcc-13 CXX=g++-13 FC=gfortran-13 F90=gfortran-13 LD=gfortran-13
          #   path: $(brew --prefix)/opt/python@3.11/libexec/bin:$(brew --prefix)/bin
          #   pkg-dependencies: graphviz ninja meson

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          if [[ "${{ matrix.os }}" =~ macos ]]; then
            brew install ${{ matrix.pkg-dependencies }}
          else
            sudo apt-get -o Acquire::Retries=3 install -y ${{ matrix.pkg-dependencies }}
          fi

      - name: Set-up Environment
        run:
          echo ${{ matrix.env }} >> $GITHUB_ENV
          echo ${{ matrix.path }} >> $GITHUB_PATH

      - name: Install Loki
        run: |
          ./install ${{ matrix.install-options }}

      - name: Run Loki tests
        run: |
          source loki-activate
          pytest --cov=./loki --cov-report=xml --pyargs loki

      - name: Upload loki coverage report to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(matrix.os, 'macos') }}
        with:
          flags: loki
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Run lint_rules tests
        run: |
          source loki-activate
          pytest --cov=./lint_rules/lint_rules --cov-report=xml lint_rules

      - name: Upload lint_rules coverage report to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ ! startsWith(matrix.os, 'macos') }}
        with:
          flags: lint_rules
          files: ./coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
